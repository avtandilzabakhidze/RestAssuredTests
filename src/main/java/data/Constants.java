package data;

import java.io.File;

public class Constants {
    public static final String BOOKSTORE_BASE_URI = "https://bookstore.toolsqa.com",
            PETSTORE_BASE_URI = "https://petstore.swagger.io/v2",
            F1_BASE_URI = "https://api.jolpi.ca/ergast/f1",
            F1_2025_DRIVERS_ENDPOINT = "/2025/drivers/",
            SERIES_F1 = "f1",
            SEASON_2025 = "2025",
            BOOKING_BASE_URI = "https://restful-booker.herokuapp.com",
            BOOKING_ENDPOINT = "/booking",
            BOOKSTORE_BOOKS_ENDPOINT = "/BookStore/v1/Books",
            SWAPI_BASE_URI = "https://swapi.tech/api",
            BASE_SOUP_URL = "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso",
            SWAPI_PLANETS_ENDPOINT = "/planets/",
            SWAPI_QUERY_FORMAT = "json",
            USER_NAME = "userNam",
            PASSWORD = "userNam",
            ADMIN_USERNAME = "admin",
            ADMIN_PASSWORD = "password123",
            FIRST_NAME = "John",
            LAST_NAME = "Doe",
            FIRST_AUTH = "Richard E. Silverman",
            SECOND_AUTH = "Addy Osmani",
            MESSAGE = "message",
            BOOKS = "books",
            DOC = "docs",
            A = "A",
            CA = "ca",
            OCEANIA = "Oceania",
            AFRICA = "Africa",
            SOUTH_AMERICA ="South America",
            ANTARCTICA = "Antarctica",
            SLASH = "/",
            REGEX = "\\b\\d{13}\\b",
            REGEX1 = "[A-Z]{2}",
            REGEX3 = ".*\\d.*",
            REGEX2 = "([+-]\\d{2})(\\d{2})$",
            SIZE_REGEX = "(\\d+)",
            REPLACE = "$1:$2",
            ISBN_BASE = "ISBN",
            CONTAINS_DIGIT = "should contain a 13-digit",
            CODE_401 = "Expected 401 Code",
            CODE_200 = "Expected 200 Code",
            USER_NOT_AUTHORIZED = "User not authorized!",
            UNEXPECTED_ERROR = "Unexpected error message",
            ISBN_NOT_NULL = "ISBN not be null",
            AUTHOR_NOT_EMPTY = "Author not be null",
            BOOKS_NOT_EMPTY = "Books list is empty",
            AUTHOR_MISMATCH = "Author does not match",
            TITLE_NOT_NULL = "Title is null",
            ISBN_NOT_NULL_DETAIL = "ISBN is null",
            PUBLISH_DATE_NOT_NULL = "Publish date is null",
            PAGES_COUNT_INVALID = "Pages count invalid",
            ORDER_ID_MISMATCH = "Order ID mismatch",
            PET_ID_MISMATCH = "Pet ID mismatch",
            QUANTITY_MISMATCH = "Quantity mismatch",
            NOT_BE_NULL = "should not be null",
            STATUS_MISMATCH = "Status mismatch",
            COMPLETE_FLAG_MISMATCH = "Complete flag mismatch",
            SHIP_DATE = "2025-06-10T10:00:00.000Z",
            STATUS = "placed",
            MISMATCH = "mismatch",
            NAME = "Fluffy",
            NEW_NAME = "one",
            KEYWORD = "keyboard",
            NEW_STATUS = "two",
            EXPECTED_TITLE = "Harry Potter and the Order of the Phoenix",
            EXPECTED_AUTHOR = "J. K. Rowling",
            SHIP_DATE_MISMATCH = "ShipDate mismatch",
            FILE_NOT_MATCH = "File size should match",
            CHECKIN_DATE = "2020-01-01",
            CHECKOUT_DATE = "2025-01-01",
            ADDITIONAL_NEEDS = "Breakfast",
            DRIVER_NAME_NOT_EMPTY = "Driver name should not be empty",
            POST_2000_MIN_COUNT_MSG = "Expected at least 8 drivers born after 2000",
            FRENCH_DRIVERS_EXPECTED = "Expected 3 French drivers",
            AB_NAME_START_MIN = "Expected at least 5 drivers with family name starting with A or B",
            BRITISH_YOUNG_MIN = "Expected at least 3 British drivers born after 1990",
            SPECIAL_DRIVERS_MIN = "Expected at least 5 special drivers (number < 10 or long family name)",
            EXPECTED_DUTCH_DRIVER = "Verstappen",
            ADDITIONAL_METADATA = "Picture",
            EXPECTED_CANADIAN_DRIVER = "Lance Stroll",
            PET_ENDPOINT = "/pet",
            PET_FIND_BY_STATUS_ENDPOINT = "/pet/findByStatus",
            PET_ENDPOINT_WITH_ID = "/pet/{petId}",
            AVAILABLE_STATUS = "available",
            SOLD_STATUS = "sold",
            NUM = "num",
            DOGS_CATEGORY = "Dogs",
            USER = "User",
            NOT_FOUND = "Not found",
            PASSWORD_RANDOM = "secret123",
            APPLICATION = "application/json",
            FIRST_LASTNAME = "Nicholas C. Zakas",
            SECOND_LASTNAME = "Marijn Haverbeke",
            URL_ESCUELAJS = "https://api.escuelajs.co/api",
            SOUP_BASE_URL = "https://dl.eviware.com/soapuios/5.7.2/SoapUI-x64-5.7.2.exe",
            AVATAR = "https://en.wikipedia.org/wiki/Elephantidae#/media/File:Elephas_maximus_(Bandipur).jpg",
            DIGITS_REGEX = "\\d+",
            QUERY_PARAM_FORMAT = "format",
            PLANET = "planet should have",
            PETSTORE_BASE_URI_V3 = "https://petstore3.swagger.io/api/v3",
            JSON_PATH_PLANET = "result.properties",
            EMPTY_PLANET_NAME = "Planet name should not be empty",
            ROTATION_PERIOD_NOT_NUMERIC = "Rotation period should be numeric",
            NULL_ORBITAL_PERIOD = "Orbital period should not be null",
            EMPTY_CLIMATE = "Climate should not be empty",
            TIMER = "2025-06-16T18:00:00.000Z",
            INVALID_CREATION_DATE = "Creation date should be in the past",
            CREATED_DATE_SORT_ERROR_PREFIX = "Planet creation date out of order at index ";

    public static final int EXPECTED_RECENT_PLANET_COUNT = 3;


    public static final File PICTURE_FILE = new File("src/test/resources/gog.jpg");

    public static final long ORDER_ID = 12345L,
            FIRST_PET_ID = 1L,
            ZERO = 0L,
            HUN = 100L,
            NINE = 999L,
            NEGATIVE_ONE = -1,
            PET_ID = 54321L,
            THOU = 1001L,
            TEN = 10,
            TIME = 20,
            LAST = 999999L;

    public static final int QUANTITY = 2,
            TOTAL_PRICE = 123,
            THREE = 3,
            EIGHT = 8,
            SIX = 6,
            FIVE = 5,
            TWO = 2,
            THOUSAND = 1000,
            FIRST = 1,
            CATEGORY_ID = 1,
            FIRST_RANDOM = 1000000,
            LAST_RANDOM = 9999999;

    public static final boolean IS_TRUE = true;
}
